#
#
# The first digit
#
#
inp w
# No-op
mul x 0
# No-op
add x z
# No-op
mod x 26
# No-op
div z 1
# x is now 12
add x 12
# 12 doesn't ever equal w so x becomes 0
eql x w
# x does equal zero so x becomes 1
eql x 0
# y is zero
mul y 0
# y is 25
add y 25
# y ix 0
mul y x
# y is 1
add y 1
# z is 0 
mul z y
# y is 0
mul y 0
# y is now the input digit
add y w
# y is now the input digit + 4
add y 4
# y = y * 1 .. so y is the input digit + 4
mul y x
# z is zero, so z is now the input digit + 4
add z y
#
#
# The second digit
#
#
inp w
# x becomes zero
mul x 0
# z + x. Because x is zero x becomes z (digit + 4 from part one)
add x z
# Mod 26 on first digit + 4?
mod x 26
# No-op
div z 1
# Then add 11 to x
add x 11
# Is ((digit one + 4) % 26) + 11 equal to the current digit? If they are x becomes 1
eql x w
# Invert x
eql x 0
# y = 0
mul y 0
# y 25
add y 25
# y stays as 25 or is set to zero based on previous vs current digit compare
mul y x
# y + 1 in either case
add y 1
mul z y
# Reset y
mul y 0
add y w
add y 10
mul y x
add z y
#
#
#
#
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 12
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -6
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 14
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 1
add x 15
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 6
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 1
add x 12
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 16
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -9
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 1
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 7
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -5
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 11
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -9
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -5
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 3
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -2
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 1
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -7
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y
